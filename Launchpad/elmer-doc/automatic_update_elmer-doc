#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    if [[ ${0} =~ ^/.+$ ]]; then
        export MAIN_DIR="$(dirname ${0})/../.."
    else
        export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
    fi
fi

export PACKAGE="elmer-doc"

# Uncomment if necessary:
#export SFX="-1ppa1"

#export NEW_VER=2013.02.01


# Launch common script for setting variables
source "${MAIN_DIR}/Launchpad/setting_variables"


# Get old version
GetOldVersion
export OLD_COMMIT=$(echo ${OLD_VER} | sed -e "s/^.*.svn.\([0-9]\+\).dfsg.*$/\1/")


# Find new version
export LAST_MOD=$(curl -I 'ftp://ftp.funet.fi/index/elmer/doc/ElmerDocumentation.tar.gz' 2>&1 | sed -ne "s/^.*Last-Modified: \(.*\) GMT.*$/\1/p")
if [ -z "${LAST_MOD}" ]; then
    echo "Failed to define current version."
    exit 1
fi
if [ -z "${NEW_VER}" ]; then
    export NEW_VER=$(date -d "${LAST_MOD}" "+%Y.%m.%d")
fi
export NEW_VER_FULL=${NEW_VER}${SFX}${UBUNTU_SFX}


# Display versions
DisplayVersions "ftp://ftp.funet.fi/index/elmer/doc/"


# Print versions
PrintVersions "${@}"


# Check versions
CheckVersions


# Get the sources
if [ ! -e "${PACKAGE}_${NEW_VER}.orig.tar.gz" ]; then
    "${PKG_DIR}/${PACKAGE}-debian/debian/rules" "get-orig-source" || exit 1
fi


export UPDATE_STRING="New upstream release."

export DESTINATION="elmerfem"

export A_TYPE="gz"
export D_ARGS="xzf"

# Launch common script for updating packages and uploading them to Launchpad
source "${MAIN_DIR}/Launchpad/updating_packages"

