#!/bin/bash

if [ -z "${MAIN_DIR}" ]; then
    export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
fi

export PACKAGE="eiskaltdcpp"

# Uncomment if necessary:
export SFX="-5ppa1"


# Launch common script for setting variables
source "${MAIN_DIR}/Launchpad/setting_variables"


# Get old version
GetOldVersion


# Find new version
export VER_LIST=$(curl 'http://code.google.com/p/eiskaltdc/downloads/list' 2>&1 | grep 'eiskaltdc.googlecode.com/files/eiskaltdcpp-' | grep '.tar.xz"' | sed -e "s:^.*eiskaltdc.googlecode.com/files/eiskaltdcpp-\(.*\).tar.xz\".*$:\1:")
export NEW_VER=$(echo "${VER_LIST}" | sort -r -V | head -n1)
export NEW_VER_FULL=${NEW_VER}${SFX}${UBUNTU_SFX}


# Display versions
DisplayVersions "http://code.google.com/p/eiskaltdc/downloads/list"


# Print versions
PrintVersions "${@}"


# Check versions
CheckVersions


# Get the sources
if !([ -e "${PACKAGE}_${NEW_VER}.orig.tar.bz2" ]); then
    wget -4 -c "http://eiskaltdc.googlecode.com/files/eiskaltdcpp-${NEW_VER}.tar.xz"
    mv -f "${PACKAGE}-${NEW_VER}.tar.xz" "${PACKAGE}_${NEW_VER}.orig.tar.xz"
fi


export UPDATE_STRING="Update to stable release ${NEW_VER}."

export DIST_LIST="precise
                  oneiric
                  natty"

#export A_TYPE="xz"
#export D_ARGS="xJf"

# Launch common script for updating packages and uploading them to Launchpad
source "${MAIN_DIR}/Launchpad/updating_packages"

