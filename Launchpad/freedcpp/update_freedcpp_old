#!/bin/bash


export MAIN_DIR="${HOME}/WorkDir/Devel/deb_packages"

export PACKAGE="freedcpp"

export NEW_VER="0.0.5"

# Uncomment if necessary:
export SFX="-0ppa2"


# Launch common script for setting variables
source "${MAIN_DIR}/Launchpad/setting_variables"


# Get old version
export OLD_VER_FULL=$(head -n 1 "${PKG_DIR}/${PACKAGE}-debian/debian/changelog" | sed -e "s/.* (\(.*\)) .*/\1/")
export OLD_VER=$(echo ${OLD_VER_FULL} | sed -e "s/^\(.*\)-[0-9]ppa.*$/\1/")
export NEW_VER_FULL="${NEW_VER}${SFX}${UBUNTU_SFX}"


# Display versions
echo "OLD_VER_FULL = ${OLD_VER_FULL}"
echo "NEW_VER_FULL = ${NEW_VER_FULL}"
echo " "


# Check versions
if [ -z "${OLD_VER_FULL}" ]; then
  echo "OLD_VER_FULL is empty!";
  exit 0;
elif [ "${NEW_VER_FULL}" = "${OLD_VER_FULL}" ]; then
  echo "Upgrading is not required.";
  exit 0;
fi


# Get the sources
if !([ -e "${PACKAGE}_${NEW_VER}.orig.tar.gz" ]); then
    echo "Start exporting from SVN..."
    export EXPORT_LOG_FILE="${TEMP_DIR}/${PACKAGE}-${NEW_VER_FULL}.export.log"
    svn export "http://freedcpp.googlecode.com/svn/tags/freedcpp-${NEW_VER}/" "freedcpp-${NEW_VER}/"  > ${EXPORT_LOG_FILE}
    echo "Finished download from SVN."
    tar -czf "${PACKAGE}_${NEW_VER}.orig.tar.gz" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="Update to stable release ${NEW_VER}."

# Launch common script for updating packages and uploading them to Launchpad
source "${MAIN_DIR}/Launchpad/updating_packages_old"

