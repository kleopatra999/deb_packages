#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    if [[ ${0} =~ ^/.+$ ]]; then
        export MAIN_DIR="$(dirname ${0})/../.."
    else
        export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
    fi
fi

export PACKAGE="freedcpp"

#export NEW_VER="0.0.5"

# Uncomment if necessary:
export SFX="-0ppa3"

# Launch common script for setting variables
source "${MAIN_DIR}/Launchpad/setting_variables"


# Get old version
GetOldVersion

# Find new version
export VER_LIST=$(curl "https://freedcpp.googlecode.com/svn/tags/" 2>&1 | sed -ne "s:^.*href=\"freedcpp-\(.*\)/\".*:\1:p")
if [ -z "${NEW_VER}" ]; then
    export NEW_VER=$(echo "${VER_LIST}" | sort -r -V | head -n1)
fi
export NEW_VER_FULL="${NEW_VER}${SFX}${UBUNTU_SFX}"


# Display versions
DisplayVersions "https://freedcpp.googlecode.com/svn/tags/"


# Print versions
PrintVersions "${@}"


# Check versions
CheckVersions


# Get the sources
if [ ! -e "${PACKAGE}_${NEW_VER}.orig.tar.xz" ]; then
# if [ ! -e "${PACKAGE}_${NEW_VER}.orig.tar.gz" ]; then
    echo "Start exporting from SVN..."
    export EXPORT_LOG_FILE="${TEMP_DIR}/${PACKAGE}-${NEW_VER_FULL}.export.log"
    svn export "http://freedcpp.googlecode.com/svn/tags/freedcpp-${NEW_VER}/" "freedcpp-${NEW_VER}/"  > ${EXPORT_LOG_FILE}
    echo "Finished download from SVN."
    tar -cJf "${PACKAGE}_${NEW_VER}.orig.tar.xz" "${PACKAGE}-${NEW_VER}"
#     tar -czf "${PACKAGE}_${NEW_VER}.orig.tar.gz" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="Update to stable release ${NEW_VER}."

# export A_TYPE="gz"
# export D_ARGS="xzf"

export A_TYPE="xz"
export D_ARGS="xJf"

# Launch common script for updating packages and uploading them to Launchpad
source "${MAIN_DIR}/Launchpad/updating_packages"

