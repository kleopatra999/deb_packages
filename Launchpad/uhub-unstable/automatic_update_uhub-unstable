#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    if [[ ${0} =~ ^/.+$ ]]; then
        export MAIN_DIR="$(dirname ${0})/../.."
    else
        export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
    fi
fi

export PACKAGE="uhub-unstable"

# Uncomment if necessary:
#export SFX="-0ppa2"

# Available branches: master
export BRANCH=master


# Launch common script for setting variables
source "${MAIN_DIR}/Launchpad/setting_variables"


# Get old version
GetOldVersion
export OLD_COMMIT=$(echo ${OLD_VER} | sed -e "s/^.*-*[0-9]\+-g\(.*\)$/\1/")


# Find new version
export DEVELOPER=janvidar
export PROJECT=uhub
export LAST_SRC_INFO=$(curl -I "https://nodeload.github.com/${DEVELOPER}/${PROJECT}/tarball/${BRANCH}" 2>&1)
export LAST_SRC=$(echo "${LAST_SRC_INFO}" | grep 'Content-Disposition:' | sed -e "s/.*\(${DEVELOPER}-${PROJECT}.*\).tar.gz.*/\1/")
export LAST_COMMIT=$(echo "${LAST_SRC}" | sed -e "s/^${DEVELOPER}-${PROJECT}.*-[0-9]\+-g\(.*\)$/\1/")

if [ -z "${NEW_VER}" ]; then
    # Temporary hack:
    export CUR_VER=$(echo ${LAST_SRC} | sed -e "s/^${DEVELOPER}-${PROJECT}-\(.*\)$/\1/" | sed -e "s/^\(.*\)-[0-9]\+-g\(.*\)$/\1/")
    export NEW_VER=$(echo ${LAST_SRC} | sed -e "s/^${DEVELOPER}-${PROJECT}-\(.*\)$/\1/" | sed "s/${CUR_VER}-/${CUR_VER}-r/")
    # Update when 0.4.1 is released.
    # export NEW_VER=$(echo ${LAST_SRC} | sed -e "s/^${DEVELOPER}-${PROJECT}-\(.*\)$/\1/")
fi
export NEW_VER_FULL="${NEW_VER}${SFX}${UBUNTU_SFX}"


# Display versions
DisplayVersionsUnstable


# Print versions
PrintVersionsUnstable "${@}"


# Check versions
CheckVersions


# Get the sources
if [ ! -e "${PACKAGE}_${NEW_VER}.orig.tar.xz" ]; then
    rm -rf  "${PACKAGE}-${NEW_VER}"
    # sources
    rm -f "${BRANCH}"*
    wget -4 -c "https://nodeload.github.com/${DEVELOPER}/${PROJECT}/tarball/${BRANCH}"
    rm -rf ${DEVELOPER}-${PROJECT}-*
    tar xzf "${BRANCH}"
    mv ${DEVELOPER}-${PROJECT}-* "${PACKAGE}-${NEW_VER}"
    # tarball
    tar -cJf "${PACKAGE}_${NEW_VER}.orig.tar.xz" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="Minor update from GIT ${BRANCH} branch."

export A_TYPE="xz"
export D_ARGS="xJf"

# Launch common script for updating packages and uploading them to Launchpad
source "${MAIN_DIR}/Launchpad/updating_packages"

