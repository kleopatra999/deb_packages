#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    if [[ ${0} =~ ^/.+$ ]]; then
        export MAIN_DIR="$(dirname ${0})/../.."
    else
        export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
    fi
fi

export PACKAGE="qxmpp"

# Uncomment if necessary:
export SFX="-3"

#export NEW_VER=0.4.0~git20120405-390b63e

# experimental unstable
export MAIN_DIST="unstable"


# Launch common script for setting variables
source "${MAIN_DIR}/Debian/setting_variables"


# Get old version
GetOldVersion


# Find new version
export VER_LIST=$(curl 'http://code.google.com/p/qxmpp/downloads/list' 2>&1 | grep 'qxmpp.googlecode.com/files/qxmpp-' | grep '.tar.gz"' | sed -e "s:^.*qxmpp.googlecode.com/files/qxmpp-\(.*\).tar.gz\".*$:\1:")
if [ -z "${NEW_VER=}" ]; then
    export NEW_VER=$(echo "${VER_LIST}" | sort -r -V | head -n1)
fi
export NEW_VER_FULL=${NEW_VER}${SFX}


# Display versions
DisplayVersions "http://code.google.com/p/qxmpp/downloads/list"


# Print versions
PrintVersions "${@}"


# Check versions
CheckVersions


# Get the sources
if !([ -e "${PACKAGE}_${NEW_VER}.orig.tar.gz" ]); then
    wget -4 -c "http://qxmpp.googlecode.com/files/qxmpp-${NEW_VER}.tar.gz"
    mv -f "${PACKAGE}-${NEW_VER}.tar.gz" "${PACKAGE}_${NEW_VER}.orig.tar.gz"
fi


export UPDATE_STRING="Update to stable release ${NEW_VER}."

export A_TYPE="gz"
export D_ARGS="xzf"

# Launch common script for updating packages and uploading them to mentors.debian.net
source "${MAIN_DIR}/Debian/updating_packages"

