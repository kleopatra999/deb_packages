#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
fi

export PACKAGE="qxmpp-lc"

# Uncomment if necessary:
#export SFX="-2"

#export NEW_VER=0.4.0~git20120405-390b63e

# experimental unstable
export MAIN_DIST="unstable"


# Launch common script for setting variables
source "${MAIN_DIR}/Debian/setting_variables"


# Get old version
GetOldVersion


# Find new version
export DEVELOPER=0xd34df00d
export PROJECT=qxmpp-dev
export VER_LIST=$(curl "https://github.com/${DEVELOPER}/${PROJECT}/tags" 2>&1 | grep "=\"/${DEVELOPER}/${PROJECT}/tarball/" | sed -e "s:^.*\"/${DEVELOPER}/${PROJECT}/tarball/\(.*\)\" .*:\1:")
if [ -z "${NEW_VER=}" ]; then
    export NEW_VER=$(echo "${VER_LIST}" | sort -r -V | head -n1)
fi
export NEW_VER_FULL=${NEW_VER}${SFX}


# Display versions
DisplayVersions "https://github.com/${DEVELOPER}/${PROJECT}/downloads"


# Print versions
PrintVersions "${@}"


# Check versions
CheckVersions


# Get the sources
if !([ -e "${PACKAGE}_${NEW_VER}.orig.tar.xz" ]); then
    rm -rf  "${NEW_VER}" "${PACKAGE}-${NEW_VER}"
    # sources
    wget -4 -c "http://nodeload.github.com/${DEVELOPER}/${PROJECT}/tarball/${NEW_VER}"
    rm -rf ${DEVELOPER}-${PROJECT}-*
    tar xzf "${NEW_VER}"
    mv ${DEVELOPER}-${PROJECT}-* "${PACKAGE}-${NEW_VER}"
    # tarball
    tar -cJf "${PACKAGE}_${NEW_VER}.orig.tar.xz" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="Update to stable release ${NEW_VER}."

export A_TYPE="xz"
export D_ARGS="xJf"

# Launch common script for updating packages and uploading them to mentors.debian.net
source "${MAIN_DIR}/Debian/updating_packages"

