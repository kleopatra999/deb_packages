#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
fi

export PACKAGE="psimedia"

# Uncomment if necessary:
export SFX="-2"

# experimental unstable
export MAIN_DIST="unstable"


# Launch common script for setting variables
source "${MAIN_DIR}/Debian/setting_variables"


# Get old version
export OLD_VER_FULL=$(head -n 1 "${PKG_DIR}/${PACKAGE}-debian/debian/changelog" | sed -e "s/.* (\(.*\)) .*/\1/")
export OLD_VER=$(echo ${OLD_VER_FULL} | sed -e "s/^\(.*\)-[0-9]$/\1/")
export OLD_SFX=$(echo ${OLD_VER_FULL} | sed -e "s/^.*\(-[0-9]\)$/\1/")
export OLD_REVISION=$(echo ${OLD_VER} | sed -e "s/^.*\+svn\([0-9]\+\)$/\1/")


# Find new version
export LAST_REVISION=$(svn log https://delta.affinix.com/svn/trunk/psimedia/ | head -n2 |grep "r[0-9]\+" | sed -e "s/^r\([0-9]\+\).*$/\1/")

echo "Number of old  revision: ${OLD_REVISION}"
echo "Number of last revision: ${LAST_REVISION}"

export CUR_VER="1.0.3"
export NEW_VER="${CUR_VER}+svn${LAST_REVISION}"
export NEW_VER_FULL="${NEW_VER}${SFX}"


# Display versions
echo "OLD_VER_FULL = ${OLD_VER_FULL}"
echo "NEW_VER_FULL = ${NEW_VER_FULL}"


# Print versions
if [ "${1}" = "print-versions" ]; then
    if [ -z "${2}" ]; then
        echo "File name must be not empty!"
        exit 1
    else
        HTML_FILE="${2}"
        echo "<td align=\"center\">" >> "${HTML_FILE}"
        echo "${PACKAGE}" >> "${HTML_FILE}"
        echo "</td>" >> "${HTML_FILE}"
        echo "<td align=\"center\">" >> "${HTML_FILE}"
        echo "${OLD_VER_FULL}" >> "${HTML_FILE}"
        echo "</td>" >> "${HTML_FILE}"
        echo "<td align=\"center\">" >> "${HTML_FILE}"
        echo "${NEW_VER_FULL}" >> "${HTML_FILE}"
        echo "</td>" >> "${HTML_FILE}"
        exit 0
    fi
fi


# Check versions
if [ -z "${OLD_VER_FULL}" ]; then
    echo "OLD_VER_FULL is empty!";
    exit 0;
elif [ -z ${CUR_VER} ]; then
    echo "CUR_VER is empty!";
    exit 0;
elif [ -z ${LAST_REVISION} ]; then
    echo "LAST_REVISION is empty!";
    exit 0;
elif [ "${NEW_VER_FULL}" = "${OLD_VER_FULL}" ]; then
    echo "Upgrading is not required.";
    exit 0;
else
    if [ "${NEW_VER}" != "${OLD_VER}" ]; then
        if [ "${SFX}" != "-1" ]; then
            echo "Now SFX = ${SFX} but must be '-1' for a new release!";
            exit 0;
        fi
    else
        if [ "${SFX}" = "-1" ]; then
            echo "Now SFX = ${SFX} but OLD_SFX = ${OLD_SFX}.";
            echo "Upgrading is not required.";
            exit 0;
        fi
    fi
fi


# Get the sources
if !([ -e "${PACKAGE}_${NEW_VER}.orig.tar.bz2" ]); then
    export PSI_DIR="${HOME}/WorkDir/Devel/Psi+"

    echo "Updating ${PSI_DIR}/psimedia"
    svn update "${PSI_DIR}/psimedia"

    echo "Exporting ${PSI_DIR}/psimedia"
    rm -rf "${TEMP_DIR}/${PACKAGE}-${NEW_VER}"
    svn export "${PSI_DIR}/psimedia" "${TEMP_DIR}/${PACKAGE}-${NEW_VER}"

    cd "${TEMP_DIR}"
    echo "Generating orig.tar.bz2"
    tar -cjf "${PACKAGE}_${NEW_VER}.orig.tar.bz2" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="New upstream release"

# Launch common script for updating packages and uploading them to mentors.debian.net
source "${MAIN_DIR}/Debian/updating_packages"

