#!/bin/bash


if [ -z "${MAIN_DIR}" ]; then
    export MAIN_DIR="${PWD}/$(dirname ${0})/../.."
fi

export PACKAGE="psimedia"

# Uncomment if necessary:
#export SFX="-2"

# Available branches: master
export BRANCH=master

# experimental unstable
export MAIN_DIST="unstable"


# Launch common script for setting variables
source "${MAIN_DIR}/Debian/setting_variables"


# Get old version
GetOldVersion
export OLD_COMMIT=$(echo ${OLD_VER} | sed -e "s/^.*-git[0-9]\{8,8\}-\(.*\)$/\1/")


# Find new version
export DEVELOPER=psi-plus
export PROJECT=psimedia
export LAST_SRC_INFO=$(curl -I "https://nodeload.github.com/${DEVELOPER}/${PROJECT}/tarball/${BRANCH}" 2>&1)
export LAST_SRC=$(echo "${LAST_SRC_INFO}" | grep 'Content-Disposition:' | sed -e "s/.*\(${DEVELOPER}-${PROJECT}.*\).tar.gz.*/\1/")
export LAST_COMMIT=$(echo "${LAST_SRC}" | sed -e "s/^${DEVELOPER}-${PROJECT}-\(.*\)$/\1/")

export CUR_VER="1.0.3"
export DATE=$(date "+%Y%m%d")
export NEW_VER="${CUR_VER}-git${DATE}-${LAST_COMMIT}"
export NEW_VER_FULL="${NEW_VER}${SFX}"


# Display versions
DisplayVersionsUnstable


# Print versions
PrintVersionsUnstable "${@}"


# Check versions
CheckVersionsUnstable


# Get the sources
if !([ -e "${PACKAGE}_${NEW_VER}.orig.tar.xz" ]); then
    rm -rf  "${PACKAGE}-${NEW_VER}"/
    # sources
    rm -f "${BRANCH}"*
    wget -4 -c "https://nodeload.github.com/${DEVELOPER}/${PROJECT}/tarball/${BRANCH}"
    rm -rf ${DEVELOPER}-${PROJECT}-*
    tar xzf "${BRANCH}"
    mv ${DEVELOPER}-${PROJECT}-* "${PACKAGE}-${NEW_VER}"
    # tarball
    tar -cJf "${PACKAGE}_${NEW_VER}.orig.tar.xz" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="New upstream release."

export A_TYPE="xz"
export D_ARGS="xJf"

# Launch common script for updating packages and uploading them to mentors.debian.net
source "${MAIN_DIR}/Debian/updating_packages"

